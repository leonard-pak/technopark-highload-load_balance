version: "3.9"
name: load-balance
services:
  balancer:
    container_name: balancer
    # build: ./balancer
    # entrypoint: /var/balancer.bash
    image: nginx
    volumes:
      # - ./configs/balancer.bash:/var/balancer.bash
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    cap_add:
      - NET_ADMIN
      - NET_RAW
    ports:
      - 8080:80
    depends_on:
      - backend
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    ports:
      - 3000:3000
    volumes:
      - ./configs/grafana:/var/lib/grafana:rw
  db:
    container_name: postgre-db
    image: postgres:alpine
    volumes:
      - ./database/db/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      - POSTGRES_PASSWORD=forum
      - POSTGRES_USER=forum
      - POSTGRES_DB=forum
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  db-exporter:
    container_name: postgre-exporter
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://forum:forum@db:5432/forum?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
  backend:
    # image: jwilder/whoami
    build: ./backend
    volumes:
      - ./database/db/init-db.sql:/go/db/init-db.sql:ro
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_PASSWORD=forum
      - POSTGRES_USER=forum
      - POSTGRES_DB=forum
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SERVER_PORT=8000
    deploy:
      replicas: 3
